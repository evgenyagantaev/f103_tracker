AT+CSQ
AT+CREG?
ATD+79219666439;
AT+CMGF=1
AT+CMGS="+79219666439"
  0x1A


AT+CPIN?
AT+CSTT="m.tinkoff.","",""
AT+CIICR
AT+CIFSR


Настройка:

AT                            проверка, что модудь "здесь"
ATE0                          эхо офф
AT+CSQ                        проверка уровня сигнала
AT+CREG?                      проверка регистрации в сети
AT+CSTT="m.tinkoff.","",""    настройка апн
AT+CIICR                      gprs connect
AT+CIFSR                      прочитать ip-адрес
AT+CMGF=1 (AT+CMGF=1;&W)      текстовый формат sms
AT+CMEE=2                     текстовое описание ошибки
ATE0V0+CMEE=1;&W              рабочий (молчаливый) режим, с сохранением
ATE1V1+CMEE=2;&W              отладочный (многословный) режим, с сохранением


Первой командой должна быть последовательность "AT\r", позволяющая модулю автоматически настроить скорость передачи по последовательному порту. Ответ, который можно получить после этого из порта, будет выглядеть как "AT\r\r\nOK\r\n".

Команда является простой строкой из ASCII-символов. Чтобы команду воспринял модуль, в ее конце нужно поставить символ перевода каретки "\r". В ответ модуль передаст строку символов, состоящую из двух частей — команды, на которую модуль отвечает и отделенным от нее символами "\r\r\n" ответом, заканчивающимся символами "\r\n"

AT+CREG?
"AT+CGATT=1" Заставляет модуль подключиться к GPRS. Проверить, подключен ли он, можно командой "AT+CGATT?".
"AT+CIPRXGET=1" Включает получение данных, переданных через соединение, вручную. По умолчанию этот параметр отключен и данные передаются в последовательный порт сразу после получения. Это не слишком удобно, хотя и не критично — можно настроить модуль так, чтобы вместе с данными он передавал и заголовки IP, по которым можно определить, от кого был получен пакет. Я решил, что вручную данные получать проще и не ошибся. Как я понял, данная команда воспринимается только GSM-модулями SIM.COM.
"AT+CIPMUX=1" По умолчанию модуль может устанавливать только одно подключение. Этот параметр включает возможность создавать несколько подключений. Отправка и прием данных будут отличаться только на один параметр — индекс подключения.
AT+CSTT="internet","",""    настройка апн
"AT+CIICR" Устанавливает беспроводное подключение GPRS. Может занять некоторое время, так что ее нужно выполнять в цикле и проверять ответ.
"AT+CIFSR" Возвращает IP-адрес модуля. Я использую ее чтобы проверить, подключен ли модуль к интернету.
"AT+CDNSCFG="8.8.8.8","8.8.4.4"" Этой командой устанавливаются сервера DNS, которые будет использовать модуль.
"AT+CIPSTATUS" Помимо данных о состоянии подключений эта команда дает информацию о том, готов ли модуль к установке соединений. Так что нужно проверить ее ответ.
AT+CIPSTART="UDP",100.76.208.195,1313
AT+CIPSTART=? справка по параметрам


Замечу, что при использовании протокола UDP по умолчанию датаграммы будут отсылаться и приниматься только с одного адреса. Для того, чтобы использовать UDP на полную катушку и отсылать/принимать данные с любых адресов, можно использовать так называемый расширенный режим UDP, настраиваемый командой "AT+CIPUDPMODE". За подробностями отсылаю к документации.

В ответ на команду можно получить несколько вариантов ответов. Если все хорошо, то после стандартного "OK" через небольшой промежуток времени можно получить один из трех ответов:
"index,ALREADY CONNECT" это значит, что подключение с заданным индексом уже установлено и стоит его поискать.
"index,CONNECT OK" тут все очевидно.
"index,CONNECT FAIL" означает, что возникли проблемы с установкой соединения.

Разорвать соединение можно командой "AT+CIPCLOSE=index". Разорвать все соединения и деактивировать интерфейс GPRS можно командой "AT+CIPSHUT".

Данные передаются командой "AT+CIPSEND=index,length", где index указывает подключение, по которому нужно передать данные, а length задает длину пакета данных. Кстати, узнать MTU для каждого подключения можно при помощи команды "AT+CIPSEND=?".
AT+CIPSEND=10

Если все хорошо, то модуль в ответ на команду выдаст приглашение ">", после которого нужно переслать в последовательный порт данные. Как только модуль получит количество байт, равное length, он скажет что-то типа "index,SEND OK". Вообще, можно не использовать параметр length, однако в таком случае окончание пакета данных должно быть указано явно при помощи символа 0x1A, в терминале сочетание Ctrl+Z. Для передачи произвольных данных такой вариант, очевидно, не подходит.

Прием данных

Как только GSM-модуль принимает данные, он сигнализирует об этом, посылая в последовательный порт строку вида "+CIPRXGET:1,index\r\n". Я честно не знаю, что означает единица, ибо данная функция модуля документирована достаточно слабо, но у меня она фигурирует во всех сообщениях о приеме пакета.

Мне не доставляла радости мысль о том, что придется тем или иным образом отслеживать сообщения модуля. Однако, немного поигравшись с дебаггером, я выяснил, что никаких других асинхронных сообщений модуль не посылает, а также то, что после выполнения любой AT-команды это сообщение оказывается в начале буфера. Так как я составил макрос для отделения ответа от команды путем поиска подстроки "\r\r\n", меня это никоим образом не задевало. Так что функция приема данных была реализована достаточно просто.

Так вот, принимать данные можно командой "AT+CIPRXGET=2,index,length". Двойка означает режим приема, в данном случае байты просто высыпаются в последовательный порт. Можно также задать получение данных в виде HEX-текста, видимо, ради предотвращения конфликтов с программным управлением потоком. Мне это не потребовалось, ибо управление потоком я вообще не использую. Параметр length задает размер пакета данных, который мы желаем получить за один раз.

В ответ мы получим нечто вида "+CIPRXGET:2,index,received,excess\r\n__DATA__\r\nOK\r\n". В поле received будет находиться количество байт, находящихся в пакете данных __DATA__, а поле excess будет содержать количество байт, ожидающих своей очереди в буфере модуля. Так что если поле received равно нулю, можно с чистой совестью заявлять, что получать нечего. Собственно, пользуясь этим, я и реализовал неблокирующую функцию для приема данных.

https://habr.com/ru/post/119030/

https://badembed.ru/sim900-tcp-soedinenie-s-serverom/






